// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestPowtorka.DAL;

namespace TestPowtorka.Migrations
{
    [DbContext(typeof(PowtorkaContext))]
    [Migration("20220530111847_DbInit")]
    partial class DbInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestPowtorka.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Autorzy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Jacek",
                            Surname = "Kowal"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Franek",
                            Surname = "Janosik"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Michał",
                            Surname = "Nowak"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bolesław",
                            Surname = "Prus"
                        });
                });

            modelBuilder.Entity("TestPowtorka.Models.Ksiazka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Ksiazki");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutorId = 1,
                            Description = "Horror z grozą",
                            NumberOfPages = 100,
                            Title = "Groza"
                        },
                        new
                        {
                            Id = 2,
                            AutorId = 2,
                            Description = "Zimno",
                            NumberOfPages = 150,
                            Title = "Mroz"
                        },
                        new
                        {
                            Id = 3,
                            AutorId = 3,
                            Description = "Dobra ksiazka",
                            NumberOfPages = 200,
                            Title = "Pretty Woman"
                        },
                        new
                        {
                            Id = 4,
                            AutorId = 4,
                            Description = "Dużo wody",
                            NumberOfPages = 300,
                            Title = "Potop"
                        },
                        new
                        {
                            Id = 5,
                            AutorId = 3,
                            Description = "Zabawka dla dzieci",
                            NumberOfPages = 200,
                            Title = "Lalka"
                        });
                });

            modelBuilder.Entity("TestPowtorka.Models.Ksiazka", b =>
                {
                    b.HasOne("TestPowtorka.Models.Autor", "Autor")
                        .WithMany("Ksiazki")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("TestPowtorka.Models.Autor", b =>
                {
                    b.Navigation("Ksiazki");
                });
#pragma warning restore 612, 618
        }
    }
}
